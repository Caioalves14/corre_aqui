spring.application.name=caio
# Configurações do H2
# Configuração do banco de dados H2 (ou outro banco de dados)
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.platform=h2
#spring.datasource.initialization-mode=always
#spring.h2.console.enabled=true

spring.datasource.url=jdbc:postgresql://db.bqlyyodhfcvnicgzfgiv.supabase.co:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin12345
spring.datasource.driver-class-name=org.postgresql.Driver


# Configuração do Hibernate para atualizar automaticamente o esquema
spring.jpa.hibernate.ddl-auto=update

# Adiar a inicialização do DataSource até o Hibernate criar o esquema
spring.jpa.defer-datasource-initialization=true

# Certificar que os scripts SQL serão executados após a criação do esquema
spring.sql.init.mode=always

# Mostrar as consultas SQL no log para depuração
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


api.security.secretkey="VoAFMdNprDKVom4n"
api.security.expiration=1
api.security.refresh-token.expiration=8

# // Import the functions you need from the SDKs you need
# import { initializeApp } from "firebase/app";
# import { getAnalytics } from "firebase/analytics";
# // TODO: Add SDKs for Firebase products that you want to use
# // https://firebase.google.com/docs/web/setup#available-libraries

# // Your web app's Firebase configuration
# // For Firebase JS SDK v7.20.0 and later, measurementId is optional
# const firebaseConfig = {
#   apiKey: "AIzaSyDsf3-8dBxDXM-N8lBT-z9O7-J5DArlDQc",
#   authDomain: "uploadimage-aab89.firebaseapp.com",
#   projectId: "uploadimage-aab89",
#   storageBucket: "uploadimage-aab89.firebasestorage.app",
#   messagingSenderId: "878945807811",
#   appId: "1:878945807811:web:6941d7d02152cff9e3e176",
#   measurementId: "G-ED0R83CFW1"
# };

# // Initialize Firebase
# const app = initializeApp(firebaseConfig);
# const analytics = getAnalytics(app);